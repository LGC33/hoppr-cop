---
.base-python:
  image: $CI_REGISTRY_IMAGE/ci:latest
  needs:
    - job: poetry
  variables:
    POETRY_CACHE_DIR: $CI_PROJECT_DIR/.cache/pypoetry
    POETRY_VIRTUALENVS_CREATE: "true"
    POETRY_VIRTUALENVS_IN_PROJECT: "true"
    POETRY_VIRTUALENVS_PATH: $CI_PROJECT_DIR/.venv
  cache:
    key: poetry-$CI_COMMIT_SHORT_SHA
    policy: pull
    paths:
      - .cache
      - .venv

poetry:
  stage: build
  extends: .base-python
  needs:
    - job: build-image:ci
      optional: true
    - job: semantic-release:dry-run
  script:
    # Install project dependencies with poetry
    - poetry lock --no-update
    - poetry install
  cache:
    policy: push

build-dist:
  extends: .base-python
  stage: build
  needs:
    - job: poetry
    - job: semantic-release:dry-run
  script:
    - sed -i -e "s/^__version__ = \".*\"/__version__ = \"$RELEASE_VERSION\"/" hoppr/__init__.py
    - poetry version $RELEASE_VERSION
    - poetry build
  artifacts:
    paths:
      - dist

unit-tests:
  extends: .base-python
  stage: check
  script:
    - poetry run pytest
  coverage: /TOTAL.+ ([0-9]{1,3}%)/
  artifacts:
    when: always
    reports:
      junit:
        - test.xml
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml

validate-renovate-config:
  image: docker.io/renovate/renovate:34.28
  needs: []
  stage: check
  variables:
    RENOVATE_CONFIG_FILE: renovate.json
  script:
    - renovate-config-validator
